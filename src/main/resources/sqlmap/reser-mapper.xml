<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reser.mapper">

<!-- 검색, ID 체크 SQL 문 정의 ↓↓↓↓↓↓ -->

	<!-- subcode 가 1 이면 where 사용 -->
	<sql id ='and_id'>
		<if test=" admin eq '1' ">
			and booking_member = #{userid}
		</if>
	</sql>  
	
	<sql id='and_search'>
		<if test="search=='booking_member' or search=='product_code' ">
			and ${search} like '%' || #{keyword} || '%'
		</if>
		<!-- <if test="search == 'writer' " >
			where <include refid="search_writer" />
		</if> -->
		
		<if test="search=='all' " >
			and booking_member like '%' || #{keyword} || '%'
			or product_code like '%' || #{keyword} || '%'
			<!-- or <include refid="search_writer" /> -->
			<!-- writer in (select id from member where name like '%' || #{keyword} || '%') -->
		</if>
	</sql>
	
	<sql id='where_search'>
		<if test="search=='booking_member' or search=='product_code' ">
			where ${search} like '%' || #{keyword} || '%'
		</if>
		<!-- <if test="search == 'writer' " >
			where <include refid="search_writer" />
		</if> -->
		
		<if test="search=='all' " >
			where booking_member like '%' || #{keyword} || '%'
			or product_code like '%' || #{keyword} || '%'
			<!-- or <include refid="search_writer" /> -->
			<!-- writer in (select id from member where name like '%' || #{keyword} || '%') -->
		</if>
	</sql>
	
	<!-- <sql id = "search_writer">
		writer in (select id from user_member where name like '%' || #{keyword} || '%' )		
	</sql> -->


<!-- 	<insert id="reser_insert" >
		insert into tbl_product ( product_code, booking_member, booking_start, booking_end)
		values (#{product_code, jdbcType=VARCHAR},#{booking_member},#{booking_start, jdbcType=VARCHAR},#{booking_end, jdbcType=VARCHAR})
				
	</insert> -->


	<!-- 예약여부(안드로이드) -->
	<update id="reser_using_update" >
		update tbl_product set
		product_using = 'Y'
		 <![CDATA[ where to_char(booking_start, 'YYYYMMDD') <= TO_CHAR(SYSDATE, 'YYYYMMDD')]]>  
		and to_char(booking_end, 'YYYYMMDD') >= to_char(sysdate, 'YYYYMMDD')
	</update>
	
	<!-- Product_Code 구분 쿼리 (안드로이드) -->
	<select id="reser_productcode" resultType="reservation.ReserVO">
		select r.product_code
		from product_reg r, tbl_product p
		where  r.product_code = p.product_code(+)
		and r.product_id = #{product_id} and r.product_type = #{product_type} and ( p.product_using is null or p.product_using = 'N' )
		order by r.product_code 
	</select>

	
	<!-- 예약내역 추가 (안드로이드) -->
	<insert id="reser_insert">
		insert into tbl_product ( product_code, booking_member, booking_start, booking_end)
		values ( #{product_code, jdbcType=VARCHAR}, #{booking_member, jdbcType=VARCHAR}, #{booking_start, jdbcType=VARCHAR}, #{booking_end, jdbcType=VARCHAR} )
	</insert>
	
	<!-- 회원용 예약리스트(안드로이드) -->
<!-- 	<select id="reserlist" resultType="reservation.ReserVO"> -->
<!-- 		select product_id, product_type, booking_start, booking_end -->
<!-- 		from tbl_product -->
<!-- 	</select> -->
	
	
	<!-- 사용자용 예약리스트 -->
   <select id="user_reserlist" resultType="reservation.ReserVO">
      select r.product_id, r.product_type, r.product_code, t.booking_start, t.booking_end
      from product_reg r, tbl_product t
      where r.product_code = t.product_code(+)
      and booking_member = #{id}
   </select>

	<!-- 관리자용 예약리스트 (안드로이드) -->
	<select id="mg_reserlist" resultType="reservation.ReserVO">
		select r.product_id, r.product_type, r.product_code, r.product_cost, t.booking_member, t.booking_start, t.booking_end
		from product_reg r, tbl_product t
		where r.product_code = t.product_code(+)
	</select>

<!-- 안드로이드 예약 내역 삭제 -->
	<delete id="user_reser_cancel">
	   delete from tbl_product
	   where booking_member = #{id} and product_code = #{product_code} 
	</delete>


	
	<!-- 관리자용 예약리스트      2021/08/29 주석처리
	<select id="mg_reserlist" resultType="reservation.ReserVO">
		select booking_member, product_id, product_type, product_id_used, booking_start, booking_end
		from tbl_product
	</select>  -->
	



	
<!-- Web 마이 페이지 예약 내역 처리 부분 ↓↓↓↓↓↓↓  -->	
	
	<!-- 나의 예약수 전체 조회 -->
	<select id="r_my_totalList" resultType="integer">
		select count(*) from tbl_product
		where booking_member = #{userid}
	</select>
	
	<!-- 마이페이지 예약리스트(Web) -->
	<select id="r_my_list" resultType="reservation.ReserVO">
		select *
		from (select rownum no, p.*, (select name from user_member where id = p.booking_member) name, (select product_id from product_reg where product_code = p.product_code ) product_id
			from (select * from tbl_product where booking_member = #{userid} ) p
			order by no desc) p
<!-- 		where no between #{beginList, jdbcType=VARCHAR} and #{endList, jdbcType=VARCHAR} -->
<!-- 		select * -->
<!-- 		from (select rownum no, p.*, (select name from user_member where id = p.booking_member) name -->
<!-- 			from (select * from tbl_product ) p -->
<!-- 			order by no desc) p -->
<!-- 		where no between #{beginList, jdbcType=NUMERIC} and #{endList, jdbcType=NUMERIC} -->
<!-- 		and booking_member = #{userid} -->
<!-- 		and no between #{beginList} and #{endList} -->
	</select>
	
	
	
<!-- Web 관리자 페이지 예약 내역 처리 부분 ↓↓↓↓↓↓↓  -->	

	
	<!-- 관리자 페이지 전체 예약수 조회 (Web) -->
	<select id="r_mg_totalList" resultType="integer">
		select count(*) from tbl_product <include refid="where_search" />	
<!-- 		select count(*) from tbl_product <include refid="where_search" /> -->
	</select>
	
	<!-- 관리자 페이지 페이지 처리된 예약 목록 조회 -->
	<select id="r_mg_list" resultType="reservation.ReserVO">
		select * 
		from (select  rownum no, p.*, (select name from user_member where id = p.booking_member) name
			from (select * from tbl_product <include refid="where_search" />) p					
			order by no desc) p
		where no between #{beginList} and #{endList}
<!-- 		select * 
		from (select  rownum no, p.*
			from (select * from product_reg <include refid="where_search" />
					order by product_code) p					
			order by no desc) p
		where no between #{beginList} and #{endList} -->
	</select>



<!-- Web 예약 처리 부분 ↓↓↓↓↓↓↓  -->	
	
	<!-- 사용 여부 확인을 위한 update -->
	<update id="using_update" >
		update tbl_product set
		product_using = 'Y'
		 <![CDATA[ where to_char(booking_start, 'YYYYMMDD') <= TO_CHAR(SYSDATE, 'YYYYMMDD')]]>  
		and to_char(booking_end, 'YYYYMMDD') >= to_char(sysdate, 'YYYYMMDD')
	</update>
	
	<!-- 예약 여부 확인을 위한 update -->
	<update id="reserved_update">
		update tbl_product set
		reserved ='Y'
		 <![CDATA[ where to_char(booking_start, 'YYYYMMDD') <= to_char(booking_end, 'YYYYMMDD') ]]>
	</update>
	
	<!-- 예약 가능 상품 목록 조회(Web) -->
	<select id="code_list" resultType="reservation.ReserVO">
		select r.product_code
		from product_reg r, tbl_product p
		where  r.product_code = p.product_code(+)
		and r.product_id = #{product_id} and r.product_type = #{product_type} and ( p.product_using is null or p.product_using = 'N' )
		order by r.product_code 

	</select>
	
	<!-- using처리 -->
   <update id="reser_using_update">
      update tbl_product 
      set product_using = 'Y' 
      <![CDATA[ where to_char(booking_start, 'YYYYMMDD') <= TO_CHAR(SYSDATE, 'YYYYMMDD')]]>
      and to_char(booking_end, 'YYYYMMDD') >= to_char(sysdate, 'YYYYMMDD') 
   </update>

   <!-- reserved 처리 -->
   <update id="reser_reserved_update">
      update tbl_product set reserved ='Y' 
      <![CDATA[ where to_char(booking_start, 'YYYYMMDD') <= to_char(booking_end, 'YYYYMMDD') ]]>
   </update>
	
	
	
</mapper> 